test_rmse <- sqrt(mean((test_y - predicted_y)^2))
test_mae <- mean(abs(test_y - predicted_y))
test_mape <- mean(abs((test_y - predicted_y)/test_y))*100
print("Wartośći charakterystyk liczbowych modelu.")
print("------------------------------------------")
cat("Treningowe R^2 wyniosło: ", model_glance$r.squared, "\n",
"Treningowe \"poprawione\" R^2 wyniosło: ", model_glance$adj.r.squared, "\n",
"Kryterium informacyjne Akaikego (AIC) wyniosło: ", model_glance$AIC, "\n",
"---------------------------------------------", "\n",
"Charakterystyki \"out-of-sample\"", "\n",
"Charakterystyka |   train  |   test   | \n",
"RMSE wyniosło:  |", model_glance$sigma, "|", test_rmse , "|", "\n",
"MAE wyniosło:   |", train_mae, "|",  test_mae, "|" , "\n",
"MAPE wyniosło:  |", round(train_mape,2), "%|", round(test_mape,2), "%|",  "\n")
}
library(caret)
split <- createDataPartition(cars_sample$price, p=0.75, list=FALSE)
cars_sample_train <- cars_sample[split,]
cars_sample_test <- cars_sample[-split,]
cars_model <- lm(price ~ age, data = cars_sample_train)
summary(cars_model)
model_summary(cars_model, cars_sample_test, cars_sample_test$price)
ggplot(cars_sample_train, aes(x = age)) + geom_histogram(bins = 10)
cars_model <- lm(price ~ log(age), data=cars_sample_train)
summary(cars_model)
model_summary(cars_model, cars_sample_test, cars_sample_test$price)
cars_model <- lm(price ~ log(age)+mpg, data=cars_sample_train)
summary(cars_model)
model_summary(cars_model, cars_sample_test, cars_sample_test$price)
bad_cars_model <- lm(price ~ log(age) + random_col, data=cars_sample_train)
summary(bad_cars_model)
model_summary(bad_cars_model, cars_sample_test, cars_sample_test$price)
cars_model <- lm(price ~ log(age)+mpg+engineSize, data=cars_sample_train)
summary(cars_model)
model_summary(cars_model, cars_sample_test, cars_sample_test$price)
cars_model <- lm(price ~ log(age)+mpg+engineSize+mileage, data=cars_sample)
summary(cars_model)
model_summary(cars_model, cars_sample_test, cars_sample_test$price)
cars_sample_cormat <- round(cor(cars_sample[,c(2,3,5,7,8,9)]),2)
cars_sample_cormat
library(ggcorrplot)
ggcorrplot(cars_sample_cormat, type='lower')
library(tidyverse)
cars <- readr::read_csv('cars_dataset.csv')
cars <- cars %>% dplyr::mutate(year = 2022 - year) %>% dplyr::rename(age = year)
cars_sample <- dplyr::sample_n(cars, 1000)
cars_sample <- cars_sample %>% mutate(random_col = rnorm(1000, mean = 3, sd = 0.5))
head(cars_sample)
cars_sample <- cars_sample %>% dplyr::filter((fuelType!='Hybrid')&(fuelType!='Other')&(fuelType!='Electric'))
MAE <- function(y_actual, y_predicted){
return(mean(abs(y_actual - y_predicted)))
}
MAPE <- function(y_actual, y_predicted){
return(mean(abs((y_actual-y_predicted)/y_actual))*100)
}
RMSE <- function(y_actual, y_predicted){
return(sqrt(mean((y_actual-y_predicted)^2)))
}
library(broom)
model_summary <- function(model, test_data, test_y){
model_glance <- broom::glance(model)
model_augment <- broom::augment(model)
train_mae <- mean(abs(model_augment$.resid))
train_mape <- mean(abs(model_augment$.resid/dplyr::pull(model_augment, var=1)))*100
predicted_y <- predict(model, test_data)
test_rmse <- sqrt(mean((test_y - predicted_y)^2))
test_mae <- mean(abs(test_y - predicted_y))
test_mape <- mean(abs((test_y - predicted_y)/test_y))*100
print("Wartośći charakterystyk liczbowych modelu.")
print("------------------------------------------")
cat("Treningowe R^2 wyniosło: ", model_glance$r.squared, "\n",
"Treningowe \"poprawione\" R^2 wyniosło: ", model_glance$adj.r.squared, "\n",
"Kryterium informacyjne Akaikego (AIC) wyniosło: ", model_glance$AIC, "\n",
"---------------------------------------------", "\n",
"Charakterystyki \"out-of-sample\"", "\n",
"Charakterystyka |   train  |   test   | \n",
"RMSE wyniosło:  |", model_glance$sigma, "|", test_rmse , "|", "\n",
"MAE wyniosło:   |", train_mae, "|",  test_mae, "|" , "\n",
"MAPE wyniosło:  |", round(train_mape,2), "%|", round(test_mape,2), "%|",  "\n")
}
library(caret)
split <- createDataPartition(cars_sample$price, p=0.75, list=FALSE)
cars_sample_train <- cars_sample[split,]
cars_sample_test <- cars_sample[-split,]
cars_model <- lm(price ~ age, data = cars_sample_train)
summary(cars_model)
model_summary(cars_model, cars_sample_test, cars_sample_test$price)
ggplot(cars_sample_train, aes(x = age)) + geom_histogram(bins = 10)
cars_model <- lm(price ~ log(age), data=cars_sample_train)
summary(cars_model)
model_summary(cars_model, cars_sample_test, cars_sample_test$price)
cars_model <- lm(price ~ log(age)+mpg, data=cars_sample_train)
summary(cars_model)
model_summary(cars_model, cars_sample_test, cars_sample_test$price)
bad_cars_model <- lm(price ~ log(age) + random_col, data=cars_sample_train)
summary(bad_cars_model)
model_summary(bad_cars_model, cars_sample_test, cars_sample_test$price)
cars_model <- lm(price ~ log(age)+mpg+engineSize, data=cars_sample_train)
summary(cars_model)
model_summary(cars_model, cars_sample_test, cars_sample_test$price)
cars_model <- lm(price ~ log(age)+mpg+engineSize+mileage, data=cars_sample)
summary(cars_model)
model_summary(cars_model, cars_sample_test, cars_sample_test$price)
cars_sample_cormat <- round(cor(cars_sample[,c(2,3,5,7,8,9)]),2)
cars_sample_cormat
library(ggcorrplot)
ggcorrplot(cars_sample_cormat, type='lower')
library(tidyverse)
library(caret)
set.seed(196883)
cars <- readr::read_csv('cars_dataset.csv')
cars <- cars %>% dplyr::mutate(year = 2022 - year) %>% dplyr::rename(age = year)
cars <- cars %>% dplyr::filter((fuelType!='Hybrid')&(fuelType!='Other')&(fuelType!='Electric'))
cars_sample <- dplyr::sample_n(cars, 1000)
partition <- createDataPartition(cars_dataset$price, p=0.75, list=FALSE)
library(tidyverse)
library(caret)
set.seed(196883)
cars <- readr::read_csv('cars_dataset.csv')
cars <- cars %>% dplyr::mutate(year = 2022 - year) %>% dplyr::rename(age = year)
cars <- cars %>% dplyr::filter((fuelType!='Hybrid')&(fuelType!='Other')&(fuelType!='Electric'))
cars_sample <- dplyr::sample_n(cars, 1000)
partition <- createDataPartition(cars_sample$price, p=0.75, list=FALSE)
cars_train <- cars_sample[partition,]
cars_test <- cars_sample[-partition,]
unique(cars_train$transmission)
unique(cars_sample$fuelType)
library(broom)
model_summary <- function(model, test_data, test_y){
model_glance <- broom::glance(model)
model_augment <- broom::augment(model)
train_mae <- mean(abs(model_augment$.resid))
train_mape <- mean(abs(model_augment$.resid/dplyr::pull(model_augment, var=1)))*100
predicted_y <- predict(model, test_data)
test_rmse <- sqrt(mean((test_y - predicted_y)^2))
test_mae <- mean(abs(test_y - predicted_y))
test_mape <- mean(abs((test_y - predicted_y)/test_y))*100
print("Wartośći charakterystyk liczbowych modelu.")
print("------------------------------------------")
cat("Treningowe R^2 wyniosło: ", model_glance$r.squared, "\n",
"Treningowe \"poprawione\" R^2 wyniosło: ", model_glance$adj.r.squared, "\n",
"Kryterium informacyjne Akaikego (AIC) wyniosło: ", model_glance$AIC, "\n",
"---------------------------------------------", "\n",
"Charakterystyki \"out-of-sample\"", "\n",
"Charakterystyka |   train  |   test   | \n",
"RMSE wyniosło:  |", model_glance$sigma, "|", test_rmse , "|", "\n",
"MAE wyniosło:   |", train_mae, "|",  test_mae, "|" , "\n",
"MAPE wyniosło:  |", round(train_mape,2), "%|", round(test_mape,2), "%|",  "\n")
}
cars_model <- lm(log(price) ~ log(age)+transmission, data=cars_train)
summary(cars_model)
model_summary(cars_model, cars_test, cars_test$price)
cars_sample$transmission <- as_factor(cars_train$transmission)
library(tidyverse)
library(caret)
set.seed(196883)
cars <- readr::read_csv('cars_dataset.csv')
cars <- cars %>% dplyr::mutate(year = 2022 - year) %>% dplyr::rename(age = year)
cars <- cars %>% dplyr::filter((fuelType!='Hybrid')&(fuelType!='Other')&(fuelType!='Electric'))
cars_sample <- dplyr::sample_n(cars, 1000)
partition <- createDataPartition(cars_sample$price, p=0.75, list=FALSE)
cars_train <- cars_sample[partition,]
cars_test <- cars_sample[-partition,]
unique(cars_train$transmission)
unique(cars_sample$fuelType)
library(broom)
model_summary <- function(model, test_data, test_y){
model_glance <- broom::glance(model)
model_augment <- broom::augment(model)
train_mae <- mean(abs(model_augment$.resid))
train_mape <- mean(abs(model_augment$.resid/dplyr::pull(model_augment, var=1)))*100
predicted_y <- predict(model, test_data)
test_rmse <- sqrt(mean((test_y - predicted_y)^2))
test_mae <- mean(abs(test_y - predicted_y))
test_mape <- mean(abs((test_y - predicted_y)/test_y))*100
print("Wartośći charakterystyk liczbowych modelu.")
print("------------------------------------------")
cat("Treningowe R^2 wyniosło: ", model_glance$r.squared, "\n",
"Treningowe \"poprawione\" R^2 wyniosło: ", model_glance$adj.r.squared, "\n",
"Kryterium informacyjne Akaikego (AIC) wyniosło: ", model_glance$AIC, "\n",
"---------------------------------------------", "\n",
"Charakterystyki \"out-of-sample\"", "\n",
"Charakterystyka |   train  |   test   | \n",
"RMSE wyniosło:  |", model_glance$sigma, "|", test_rmse , "|", "\n",
"MAE wyniosło:   |", train_mae, "|",  test_mae, "|" , "\n",
"MAPE wyniosło:  |", round(train_mape,2), "%|", round(test_mape,2), "%|",  "\n")
}
cars_model <- lm(log(price) ~ log(age)+transmission, data=cars_train)
summary(cars_model)
model_summary(cars_model, cars_test, cars_test$price)
cars_train$transmission <- as_factor(cars_train$transmission)
cars_test$transmission <- as_factor(cars_test$transmission)
cars_train_ohc <- cars_train %>% dplyr::mutate(trasManual = ifelse(transmission=='Manual',1,0)) %>% dplyr::mutate(trasSemiAuto = ifelse(transmission=='Semi-Auto',1,0)) %>%     dplyr::mutate(trasAuto = ifelse(transmission=='Automatic',1,0))
cars_test_ohc <- cars_test %>% dplyr::mutate(trasManual = ifelse(transmission=='Manual',1,0)) %>% dplyr::mutate(trasSemiAuto = ifelse(transmission=='Semi-Auto',1,0)) %>%     dplyr::mutate(trasAuto = ifelse(transmission=='Automatic',1,0))
head(cars_train_ohc)
cars_model_ohc <- lm(log(price) ~ log(age) + trasManual + trasSemiAuto, data=cars_train_ohc)
summary(cars_model_ohc)
cars_model_ohc <- lm(log(price) ~ log(age) + trasManual + trasAuto, data=cars_train_ohc)
summary(cars_model_ohc)
cars_model_ohc <- lm(log(price) ~ log(age) + trasManual + trasAuto + trasSemiAuto, data=cars_train_ohc)
summary(cars_model_ohc)
cars_model_ohc <- lm(log(price) ~ log(age) + trasAuto + trasSemiAuto, data=cars_train_ohc)
summary(cars_model_ohc)
model_summary(cars_model_ohc)
library(tidyverse)
library(caret)
set.seed(196883)
cars <- readr::read_csv('cars_dataset.csv')
cars <- cars %>% dplyr::mutate(year = 2022 - year) %>% dplyr::rename(age = year)
cars <- cars %>% dplyr::filter((fuelType!='Hybrid')&(fuelType!='Other')&(fuelType!='Electric'))
cars_sample <- dplyr::sample_n(cars, 1000)
partition <- createDataPartition(cars_sample$price, p=0.75, list=FALSE)
cars_train <- cars_sample[partition,]
cars_test <- cars_sample[-partition,]
unique(cars_train$transmission)
unique(cars_sample$fuelType)
library(broom)
model_summary <- function(model, test_data, test_y){
model_glance <- broom::glance(model)
model_augment <- broom::augment(model)
train_mae <- mean(abs(model_augment$.resid))
train_mape <- mean(abs(model_augment$.resid/dplyr::pull(model_augment, var=1)))*100
predicted_y <- predict(model, test_data)
test_rmse <- sqrt(mean((test_y - predicted_y)^2))
test_mae <- mean(abs(test_y - predicted_y))
test_mape <- mean(abs((test_y - predicted_y)/test_y))*100
print("Wartośći charakterystyk liczbowych modelu.")
print("------------------------------------------")
cat("Treningowe R^2 wyniosło: ", model_glance$r.squared, "\n",
"Treningowe \"poprawione\" R^2 wyniosło: ", model_glance$adj.r.squared, "\n",
"Kryterium informacyjne Akaikego (AIC) wyniosło: ", model_glance$AIC, "\n",
"---------------------------------------------", "\n",
"Charakterystyki \"out-of-sample\"", "\n",
"Charakterystyka |   train  |   test   | \n",
"RMSE wyniosło:  |", model_glance$sigma, "|", test_rmse , "|", "\n",
"MAE wyniosło:   |", train_mae, "|",  test_mae, "|" , "\n",
"MAPE wyniosło:  |", round(train_mape,2), "%|", round(test_mape,2), "%|",  "\n")
}
cars_model <- lm(log(price) ~ log(age)+transmission, data=cars_train)
summary(cars_model)
model_summary(cars_model, cars_test, cars_test$price)
cars_train$transmission <- as_factor(cars_train$transmission)
cars_test$transmission <- as_factor(cars_test$transmission)
cars_train_ohc <- cars_train %>% dplyr::mutate(trasManual = ifelse(transmission=='Manual',1,0)) %>% dplyr::mutate(trasSemiAuto = ifelse(transmission=='Semi-Auto',1,0)) %>%     dplyr::mutate(trasAuto = ifelse(transmission=='Automatic',1,0))
cars_test_ohc <- cars_test %>% dplyr::mutate(trasManual = ifelse(transmission=='Manual',1,0)) %>% dplyr::mutate(trasSemiAuto = ifelse(transmission=='Semi-Auto',1,0)) %>%     dplyr::mutate(trasAuto = ifelse(transmission=='Automatic',1,0))
head(cars_train_ohc)
cars_model_ohc <- lm(log(price) ~ log(age) + trasManual + trasSemiAuto, data=cars_train_ohc)
summary(cars_model_ohc)
cars_model_ohc <- lm(log(price) ~ log(age) + trasManual + trasAuto, data=cars_train_ohc)
summary(cars_model_ohc)
cars_model_ohc <- lm(log(price) ~ log(age) + trasManual + trasAuto + trasSemiAuto, data=cars_train_ohc)
summary(cars_model_ohc)
cars_model_ohc <- lm(log(price) ~ log(age) + trasAuto + trasSemiAuto, data=cars_train_ohc)
summary(cars_model_ohc)
model_summary(cars_model_ohc, cars_test_ohc, cars_test_ohc$price)
cars_model <- lm(log(price) ~ log(age) + transmission + engineSize + fuelType, data=cars_train)
summary(cars_model)
cars_model <- lm(log(price) ~ log(age) + transmission + engineSize + fuelType + engineSize:fuelType, data=cars_train)
summary(cars_model)
model_summary(cars_model)
library(tidyverse)
library(caret)
set.seed(196883)
cars <- readr::read_csv('cars_dataset.csv')
cars <- cars %>% dplyr::mutate(year = 2022 - year) %>% dplyr::rename(age = year)
cars <- cars %>% dplyr::filter((fuelType!='Hybrid')&(fuelType!='Other')&(fuelType!='Electric'))
cars_sample <- dplyr::sample_n(cars, 1000)
partition <- createDataPartition(cars_sample$price, p=0.75, list=FALSE)
cars_train <- cars_sample[partition,]
cars_test <- cars_sample[-partition,]
unique(cars_train$transmission)
unique(cars_sample$fuelType)
library(broom)
model_summary <- function(model, test_data, test_y){
model_glance <- broom::glance(model)
model_augment <- broom::augment(model)
train_mae <- mean(abs(model_augment$.resid))
train_mape <- mean(abs(model_augment$.resid/dplyr::pull(model_augment, var=1)))*100
predicted_y <- predict(model, test_data)
test_rmse <- sqrt(mean((test_y - predicted_y)^2))
test_mae <- mean(abs(test_y - predicted_y))
test_mape <- mean(abs((test_y - predicted_y)/test_y))*100
print("Wartośći charakterystyk liczbowych modelu.")
print("------------------------------------------")
cat("Treningowe R^2 wyniosło: ", model_glance$r.squared, "\n",
"Treningowe \"poprawione\" R^2 wyniosło: ", model_glance$adj.r.squared, "\n",
"Kryterium informacyjne Akaikego (AIC) wyniosło: ", model_glance$AIC, "\n",
"---------------------------------------------", "\n",
"Charakterystyki \"out-of-sample\"", "\n",
"Charakterystyka |   train  |   test   | \n",
"RMSE wyniosło:  |", model_glance$sigma, "|", test_rmse , "|", "\n",
"MAE wyniosło:   |", train_mae, "|",  test_mae, "|" , "\n",
"MAPE wyniosło:  |", round(train_mape,2), "%|", round(test_mape,2), "%|",  "\n")
}
cars_model <- lm(price ~ log(age)+transmission, data=cars_train)
summary(cars_model)
model_summary(cars_model, cars_test, cars_test$price)
cars_train$transmission <- as_factor(cars_train$transmission)
cars_test$transmission <- as_factor(cars_test$transmission)
cars_train_ohc <- cars_train %>% dplyr::mutate(trasManual = ifelse(transmission=='Manual',1,0)) %>% dplyr::mutate(trasSemiAuto = ifelse(transmission=='Semi-Auto',1,0)) %>%     dplyr::mutate(trasAuto = ifelse(transmission=='Automatic',1,0))
cars_test_ohc <- cars_test %>% dplyr::mutate(trasManual = ifelse(transmission=='Manual',1,0)) %>% dplyr::mutate(trasSemiAuto = ifelse(transmission=='Semi-Auto',1,0)) %>%     dplyr::mutate(trasAuto = ifelse(transmission=='Automatic',1,0))
head(cars_train_ohc)
cars_model_ohc <- lm(price ~ log(age) + trasManual + trasSemiAuto, data=cars_train_ohc)
summary(cars_model_ohc)
cars_model_ohc <- lm(price ~ log(age) + trasManual + trasAuto, data=cars_train_ohc)
summary(cars_model_ohc)
cars_model_ohc <- lm(price ~ log(age) + trasManual + trasAuto + trasSemiAuto, data=cars_train_ohc)
summary(cars_model_ohc)
cars_model_ohc <- lm(price ~ log(age) + trasAuto + trasSemiAuto, data=cars_train_ohc)
summary(cars_model_ohc)
model_summary(cars_model_ohc, cars_test_ohc, cars_test_ohc$price)
cars_model <- lm(price ~ log(age) + transmission + engineSize + fuelType, data=cars_train)
summary(cars_model)
cars_model <- lm(price ~ log(age) + transmission + engineSize + fuelType + engineSize:fuelType, data=cars_train)
summary(cars_model)
model_summary(cars_model)
library(tidyverse)
library(caret)
set.seed(196883)
cars <- readr::read_csv('cars_dataset.csv')
cars <- cars %>% dplyr::mutate(year = 2022 - year) %>% dplyr::rename(age = year)
cars <- cars %>% dplyr::filter((fuelType!='Hybrid')&(fuelType!='Other')&(fuelType!='Electric'))
cars_sample <- dplyr::sample_n(cars, 1000)
partition <- createDataPartition(cars_sample$price, p=0.75, list=FALSE)
cars_train <- cars_sample[partition,]
cars_test <- cars_sample[-partition,]
unique(cars_train$transmission)
unique(cars_sample$fuelType)
library(broom)
model_summary <- function(model, test_data, test_y){
model_glance <- broom::glance(model)
model_augment <- broom::augment(model)
train_mae <- mean(abs(model_augment$.resid))
train_mape <- mean(abs(model_augment$.resid/dplyr::pull(model_augment, var=1)))*100
predicted_y <- predict(model, test_data)
test_rmse <- sqrt(mean((test_y - predicted_y)^2))
test_mae <- mean(abs(test_y - predicted_y))
test_mape <- mean(abs((test_y - predicted_y)/test_y))*100
print("Wartośći charakterystyk liczbowych modelu.")
print("------------------------------------------")
cat("Treningowe R^2 wyniosło: ", model_glance$r.squared, "\n",
"Treningowe \"poprawione\" R^2 wyniosło: ", model_glance$adj.r.squared, "\n",
"Kryterium informacyjne Akaikego (AIC) wyniosło: ", model_glance$AIC, "\n",
"---------------------------------------------", "\n",
"Charakterystyki \"out-of-sample\"", "\n",
"Charakterystyka |   train  |   test   | \n",
"RMSE wyniosło:  |", model_glance$sigma, "|", test_rmse , "|", "\n",
"MAE wyniosło:   |", train_mae, "|",  test_mae, "|" , "\n",
"MAPE wyniosło:  |", round(train_mape,2), "%|", round(test_mape,2), "%|",  "\n")
}
cars_model <- lm(price ~ log(age)+transmission, data=cars_train)
summary(cars_model)
model_summary(cars_model, cars_test, cars_test$price)
cars_train$transmission <- as_factor(cars_train$transmission)
cars_test$transmission <- as_factor(cars_test$transmission)
cars_train_ohc <- cars_train %>% dplyr::mutate(trasManual = ifelse(transmission=='Manual',1,0)) %>% dplyr::mutate(trasSemiAuto = ifelse(transmission=='Semi-Auto',1,0)) %>%     dplyr::mutate(trasAuto = ifelse(transmission=='Automatic',1,0))
cars_test_ohc <- cars_test %>% dplyr::mutate(trasManual = ifelse(transmission=='Manual',1,0)) %>% dplyr::mutate(trasSemiAuto = ifelse(transmission=='Semi-Auto',1,0)) %>%     dplyr::mutate(trasAuto = ifelse(transmission=='Automatic',1,0))
head(cars_train_ohc)
cars_model_ohc <- lm(price ~ log(age) + trasManual + trasSemiAuto, data=cars_train_ohc)
summary(cars_model_ohc)
cars_model_ohc <- lm(price ~ log(age) + trasManual + trasAuto, data=cars_train_ohc)
summary(cars_model_ohc)
cars_model_ohc <- lm(price ~ log(age) + trasManual + trasAuto + trasSemiAuto, data=cars_train_ohc)
summary(cars_model_ohc)
cars_model_ohc <- lm(price ~ log(age) + trasAuto + trasSemiAuto, data=cars_train_ohc)
summary(cars_model_ohc)
model_summary(cars_model_ohc, cars_test_ohc, cars_test_ohc$price)
cars_model <- lm(price ~ log(age) + transmission + engineSize + fuelType, data=cars_train)
summary(cars_model)
cars_model <- lm(price ~ log(age) + transmission + engineSize + fuelType + engineSize:fuelType, data=cars_train)
summary(cars_model)
model_summary(cars_model, cars_test, cars_test$price)
library(car)
cars_model <- lm(price ~ log(age) + engineSize + mpg, data=cars_train)
car::vif(cars_model)
cars_model <- lm(price ~ log(age) + engineSize + mpg + transmission, data=cars_train)
car::vif(cars_model)
cars_model <- lm(price ~ log(age) + trasAuto + trasManual + trasSemiAuto, data = cars_train)
car::vif(cars_model)
cars_model <- lm(price ~ log(age) + trasAuto + trasManual, data = cars_train)
library(tidyverse)
library(caret)
set.seed(196883)
cars <- readr::read_csv('cars_dataset.csv')
cars <- cars %>% dplyr::mutate(year = 2022 - year) %>% dplyr::rename(age = year)
cars <- cars %>% dplyr::filter((fuelType!='Hybrid')&(fuelType!='Other')&(fuelType!='Electric'))
cars_sample <- dplyr::sample_n(cars, 1000)
partition <- createDataPartition(cars_sample$price, p=0.75, list=FALSE)
cars_train <- cars_sample[partition,]
cars_test <- cars_sample[-partition,]
unique(cars_train$transmission)
unique(cars_sample$fuelType)
library(broom)
model_summary <- function(model, test_data, test_y){
model_glance <- broom::glance(model)
model_augment <- broom::augment(model)
train_mae <- mean(abs(model_augment$.resid))
train_mape <- mean(abs(model_augment$.resid/dplyr::pull(model_augment, var=1)))*100
predicted_y <- predict(model, test_data)
test_rmse <- sqrt(mean((test_y - predicted_y)^2))
test_mae <- mean(abs(test_y - predicted_y))
test_mape <- mean(abs((test_y - predicted_y)/test_y))*100
print("Wartośći charakterystyk liczbowych modelu.")
print("------------------------------------------")
cat("Treningowe R^2 wyniosło: ", model_glance$r.squared, "\n",
"Treningowe \"poprawione\" R^2 wyniosło: ", model_glance$adj.r.squared, "\n",
"Kryterium informacyjne Akaikego (AIC) wyniosło: ", model_glance$AIC, "\n",
"---------------------------------------------", "\n",
"Charakterystyki \"out-of-sample\"", "\n",
"Charakterystyka |   train  |   test   | \n",
"RMSE wyniosło:  |", model_glance$sigma, "|", test_rmse , "|", "\n",
"MAE wyniosło:   |", train_mae, "|",  test_mae, "|" , "\n",
"MAPE wyniosło:  |", round(train_mape,2), "%|", round(test_mape,2), "%|",  "\n")
}
cars_model <- lm(price ~ log(age)+transmission, data=cars_train)
summary(cars_model)
model_summary(cars_model, cars_test, cars_test$price)
cars_train$transmission <- as_factor(cars_train$transmission)
cars_test$transmission <- as_factor(cars_test$transmission)
cars_train_ohc <- cars_train %>% dplyr::mutate(trasManual = ifelse(transmission=='Manual',1,0)) %>% dplyr::mutate(trasSemiAuto = ifelse(transmission=='Semi-Auto',1,0)) %>%     dplyr::mutate(trasAuto = ifelse(transmission=='Automatic',1,0))
cars_test_ohc <- cars_test %>% dplyr::mutate(trasManual = ifelse(transmission=='Manual',1,0)) %>% dplyr::mutate(trasSemiAuto = ifelse(transmission=='Semi-Auto',1,0)) %>%     dplyr::mutate(trasAuto = ifelse(transmission=='Automatic',1,0))
head(cars_train_ohc)
cars_model_ohc <- lm(price ~ log(age) + trasManual + trasSemiAuto, data=cars_train_ohc)
summary(cars_model_ohc)
cars_model_ohc <- lm(price ~ log(age) + trasManual + trasAuto, data=cars_train_ohc)
summary(cars_model_ohc)
cars_model_ohc <- lm(price ~ log(age) + trasManual + trasAuto + trasSemiAuto, data=cars_train_ohc)
summary(cars_model_ohc)
cars_model_ohc <- lm(price ~ log(age) + trasAuto + trasSemiAuto, data=cars_train_ohc)
summary(cars_model_ohc)
model_summary(cars_model_ohc, cars_test_ohc, cars_test_ohc$price)
cars_model <- lm(price ~ log(age) + transmission + engineSize + fuelType, data=cars_train)
summary(cars_model)
cars_model <- lm(price ~ log(age) + transmission + engineSize + fuelType + engineSize:fuelType, data=cars_train)
summary(cars_model)
model_summary(cars_model, cars_test, cars_test$price)
library(car)
cars_model <- lm(price ~ log(age) + engineSize + mpg, data=cars_train)
car::vif(cars_model)
cars_model <- lm(price ~ log(age) + engineSize + mpg + transmission, data=cars_train)
car::vif(cars_model)
cars_model <- lm(price ~ log(age) + trasAuto + trasManual + trasSemiAuto, data = cars_train_ohc)
car::vif(cars_model)
cars_model <- lm(price ~ log(age) + trasAuto + trasManual, data = cars_train_ohc)
car::vif(cars_model)
cars_model <- lm(price ~ log(age) + trasSemiAuto + trasManual, data = cars_train_ohc)
car::vif(cars_model)
admissions <- read_csv("MBA_ADMISSIONS.csv")
admissions
library(tidyverse)
library(caret)
set.seed(196883)
cars <- readr::read_csv('cars_dataset.csv')
cars <- cars %>% dplyr::mutate(year = 2022 - year) %>% dplyr::rename(age = year)
cars <- cars %>% dplyr::filter((fuelType!='Hybrid')&(fuelType!='Other')&(fuelType!='Electric'))
cars_sample <- dplyr::sample_n(cars, 1000)
partition <- createDataPartition(cars_sample$price, p=0.75, list=FALSE)
cars_train <- cars_sample[partition,]
cars_test <- cars_sample[-partition,]
cars_train
unique(cars_sample$fuelType)
cars_model <- lm(price ~ fuelType, data=cars_train)
summary(cars_model)
mean(cars_train$price)
filter(cars_train, fuelType=="Petrol") %>% count()
filter(cars_train, fuelType=="Petrol") %>% count() %>% mutate(n=n/nrows(cars_train))
filter(cars_train, fuelType=="Petrol") %>% count() %>% mutate(n=n/nrow(cars_train))
filter(cars_train, fuelType=="Petrol") %>% summarise(mean = mean(price))
filter(cars_train, fuelType=="Diesel") %>% summarise(mean = mean(price))
cars_model_ohc1 <- lm(price ~ fuelType, data=car_train_ohc1)
cars_train_ohc1 <- cars_train %>% mutate(fuelType = ifelse(fuelType=="Diesel", 1, 0))
cars_model_ohc1 <- lm(price ~ fuelType, data=car_train_ohc1)
cars_model_ohc1 <- lm(price ~ fuelType, data=cars_train_ohc1)
summary(cars_model_ohc1)
unique(cars_train$transmission)
library(broom)
model_summary <- function(model, test_data, test_y){
model_glance <- broom::glance(model)
model_augment <- broom::augment(model)
train_mae <- mean(abs(model_augment$.resid))
train_mape <- mean(abs(model_augment$.resid/dplyr::pull(model_augment, var=1)))*100
predicted_y <- predict(model, test_data)
test_rmse <- sqrt(mean((test_y - predicted_y)^2))
test_mae <- mean(abs(test_y - predicted_y))
test_mape <- mean(abs((test_y - predicted_y)/test_y))*100
print("Wartośći charakterystyk liczbowych modelu.")
print("------------------------------------------")
cat("Treningowe R^2 wyniosło: ", model_glance$r.squared, "\n",
"Treningowe \"poprawione\" R^2 wyniosło: ", model_glance$adj.r.squared, "\n",
"Kryterium informacyjne Akaikego (AIC) wyniosło: ", model_glance$AIC, "\n",
"---------------------------------------------", "\n",
"Charakterystyki \"out-of-sample\"", "\n",
"Charakterystyka |   train  |   test   | \n",
"RMSE wyniosło:  |", model_glance$sigma, "|", test_rmse , "|", "\n",
"MAE wyniosło:   |", train_mae, "|",  test_mae, "|" , "\n",
"MAPE wyniosło:  |", round(train_mape,2), "%|", round(test_mape,2), "%|",  "\n")
}
cars_train$transmission <- as_factor(cars_train$transmission)
cars_test$transmission <- as_factor(cars_test$transmission)
cars_train_ohc <- cars_train %>% dplyr::mutate(trasManual = ifelse(transmission=='Manual',1,0)) %>% dplyr::mutate(trasSemiAuto = ifelse(transmission=='Semi-Auto',1,0)) %>%     dplyr::mutate(trasAuto = ifelse(transmission=='Automatic',1,0))
cars_test_ohc <- cars_test %>% dplyr::mutate(trasManual = ifelse(transmission=='Manual',1,0)) %>% dplyr::mutate(trasSemiAuto = ifelse(transmission=='Semi-Auto',1,0)) %>%     dplyr::mutate(trasAuto = ifelse(transmission=='Automatic',1,0))
head(cars_train_ohc)
unique(cars_train$transmission)
cars_train_bad <- cars_train %>% mutate(transmission = ifelse(transmission=="Automatic",0, ifelse(transmission=="Semi-Auto",1,2)))
cars_model_bad <- lm(price~transmission, data=cars_train_bad)
summary(cars_model_bad)
cars_train_bad <- cars_train %>% mutate(transmission = ifelse(transmission=="Automatic",2, ifelse(transmission=="Semi-Auto",1,0)))
cars_model_bad <- lm(price~transmission, data=cars_train_bad)
summary(cars_model_bad)
cars_train_bad <- cars_train %>% mutate(transmission = ifelse(transmission=="Automatic",1, ifelse(transmission=="Semi-Auto",0,2)))
cars_model_bad <- lm(price~transmission, data=cars_train_bad)
summary(cars_model_bad)
