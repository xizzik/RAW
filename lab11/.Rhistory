library(tidyverse)
library(MASS)
library(ggfortify)
install.packages('ggfortify')
library(tidyverse)
library(MASS)
library(ggfortify)
head(wine)
wine <- readr::read_csv('Wine.csv')
head(wine)
library(tidyverse)
library(MASS)
library(ggfortify)
library(VGAM)
library(caret)
wine <- readr::read_csv('Wine.csv')
head(wine)
index <- caret::createDataPartition(wine$Customer_Segment, p = 0.75)
wine_train <- wine[index,]
index <- caret::createDataPartition(wine$Customer_Segment, list = FALSE)
wine_train <- wine[index,]
wine_test <- wine[-index,]
lda_1 <- MASS::lda(Customer_Segment ~. , data = wine_train)
wine_train_transform <- as.data.frame(predict(lda, wine_train))
lda_1 <- MASS::lda(Customer_Segment ~. , data = wine_train)
wine_train_transform <- as.data.frame(predict(lda_1, wine_train))
head(wine_train_transform)
lda_1 <- MASS::lda(Customer_Segment ~. , data = wine_train)
wine_train_transform <- as.data.frame(predict(lda_1, wine_train))
head(wine_train_transform)
ggplot(data = wine_train_transform, aes(x = x.LD1, y = x.LD2, color = wine_train$Customer_Segment)) + geom_scatter()
ggplot(data = wine_train_transform, aes(x = x.LD1, y = x.LD2, color = wine_train$Customer_Segment)) + geom_point()
wine <- readr::read_csv('Wine.csv') %>% dplyr::mutate(Customer_Segment = as.factor(Customer_Segment))
head(wine)
index <- caret::createDataPartition(wine$Customer_Segment, list = FALSE)
wine_train <- wine[index,]
wine_test <- wine[-index,]
lda_1 <- MASS::lda(Customer_Segment ~. , data = wine_train)
wine_train_transform <- as.data.frame(predict(lda_1, wine_train))
head(wine_train_transform)
ggplot(data = wine_train_transform, aes(x = x.LD1, y = x.LD2, color = wine_train$Customer_Segment)) + geom_point() + labs(legend = Customer_Segment)
ggplot(data = wine_train_transform, aes(x = x.LD1, y = x.LD2, color = wine_train$Customer_Segment)) + geom_point() + labs(legend = 'Customer Segment')
ggplot(data = wine_train_transform, aes(x = x.LD1, y = x.LD2, color = wine_train$Customer_Segment)) + geom_point() + labs(x = 'First Linear Discriminant', y = 'Second Linear Discriminant', legend = 'Customer Segment')
ggplot(data = wine_train_transform, aes(x = x.LD1, y = x.LD2, color = wine_train$Customer_Segment)) + geom_point() + labs(x = 'First Linear Discriminant', y = 'Second Linear Discriminant', color = 'Customer Segment')
ggplot(data = wine_train_transform, aes(x = x.LD1, y = x.LD2, color = wine_train$Customer_Segment)) + geom_point() + labs(x = 'First Linear Discriminant', y = 'Second Linear Discriminant', color = 'Customer Segment', title = 'Wine training data in Linear Discriminant space')
lda_logreg <- VGAM::vglm(wine_train$Customer_Segment ~ wine_train_transform$x.LD1 + wine_train_transform$x.LD2, family = 'binomial')
lda_logreg <- VGAM::vglm(wine_train$Customer_Segment ~ wine_train_transform$x.LD1 + wine_train_transform$x.LD2, family = 'multinomial')
library(tidyverse)
library(MASS)
library(ggfortify)
library(VGAM)
library(caret)
library(e1071)
svm_lda <- e1071::svm(wine_train$Customer_Segment ~ wine_train_transform$x.LD1 + wine_train_transform$x.LD2, kernel = 'linear', type = 'linear')
svm_lda <- e1071::svm(wine_train$Customer_Segment ~ wine_train_transform$x.LD1 + wine_train_transform$x.LD2, kernel = 'linear', type = 'C')
predict(svm_lda, wine_test)
confusionMatrix(data = predict(svm_lda, wine_test), reference = wine_test)
confusionMatrix(data = predict(svm_lda, wine_test), reference = wine_test$Customer_Segment)
dim(wine_test$Customer_Segment)
length(wine_test$Customer_Segment)
length( predict(svm_lda, wine_test))
length(predict(svm_lda, wine_test))
wine_test_transform <- as.data.frame(predict(lda_1, wine_test))
svm_lda <- e1071::svm(wine_train$Customer_Segment ~ wine_train_transform$x.LD1 + wine_train_transform$x.LD2, kernel = 'linear', type = 'C')
confusionMatrix(data = predict(svm_lda, wine_test_transform[,c(5,6)]), reference = wine_test$Customer_Segment)
length(predict(svm_lda, wine_test_transform[,c(5,6)]))
length(wine_test$Customer_Segment)
predict(svm_lda, wine_test_transform[,c(5,6)])
confusionMatrix(data = predict(svm_lda, wine_test_transform[1:88,c(5,6)]), reference = wine_test$Customer_Segment)
confusionMatrix(data = predict(svm_lda, wine_test_transform[1:89,c(5,6)]), reference = wine_test$Customer_Segment)
confusionMatrix(data = predict(svm_lda, wine_test_transform[1:87,c(5,6)]), reference = wine_test$Customer_Segment)
predict(svm_lda, wine_test_transform[1:87,c(5,6)])
predict(svm_lda, wine_test_transform[1:88,c(5,6)])
predict(svm_lda, wine_test_transform[1:89,c(5,6)])
is.na(wine_test)
sum(is.na(wine_test))
sum(is.na(wine_train))
predict(svm_lda, wine_test_transform[,c(5,6)])
predict(svm_lda, wine_test_transform[,c(5,6)])[1:88]
confusionMatrix(data = predict(svm_lda, wine_test_transform[,c(5,6)])[1:88], reference = wine_test$Customer_Segment)
svm_nlda <- e1071::svm(Customer_Segment ~., data = wine_train, kernel = 'linear', type = 'C')
confusionMatrix(data = predict(svm_lda, wine_test)[1:88], reference = wine_test$Customer_Segment)
confusionMatrix(data = predict(svm_nlda, wine_test)[1:88], reference = wine_test$Customer_Segment)
svm_nlda <- e1071::svm(Customer_Segment ~ Alcochol, data = wine_train, kernel = 'linear', type = 'C')
svm_nlda <- e1071::svm(Customer_Segment ~ Alcohol, data = wine_train, kernel = 'linear', type = 'C')
svm_nlda <- e1071::svm(Customer_Segment ~ Alcohol, data = wine_train, kernel = 'linear', type = 'C')
confusionMatrix(data = predict(svm_nlda, wine_test)[1:88], reference = wine_test$Customer_Segment)
svm_nlda <- e1071::svm(Customer_Segment ~ Alcohol + Flavanoids, data = wine_train, kernel = 'linear', type = 'C')
confusionMatrix(data = predict(svm_nlda, wine_test)[1:88], reference = wine_test$Customer_Segment)
stars <- readr::read_csv('stars.csv') %>% dplyr::mutate(class = as.factor(class))
head(stars)
stars <- readr::read_csv('stars.csv') %>% dplyr::mutate(class = as.factor(class))
stars <- stars[-c(1,9,10,12,13,17,18)]
head(stars)
lda_stars <- lda(class ~. , data = stars)
stars_lda <- as.data.frame(predict(stars_lda, stars))
stars_lda <- as.data.frame(predict(lda_stars, stars))
lda_stars <- lda(class ~. , data = stars)
stars_lda <- as.data.frame(predict(lda_stars, stars))
svm_stars <- svm(stars$class ~ stars_lda$x.LD1 + stars_lda$x.LD2, type = 'C', kernel = 'linear')
confusionMatrix(predict(svm_stars, as.data.frame(stars_lda$x.LD1, stars_lda$x.LD2), stars$class)
lda_stars <- lda(class ~. , data = stars)
stars_lda <- as.data.frame(predict(lda_stars, stars))
svm_stars <- svm(stars$class ~ stars_lda$x.LD1 + stars_lda$x.LD2, type = 'C', kernel = 'linear')
confusionMatrix(predict(svm_stars, as.data.frame(stars_lda$x.LD1, stars_lda$x.LD2), stars$class))
lda_stars <- lda(class ~. , data = stars)
stars_lda <- as.data.frame(predict(lda_stars, stars))
svm_stars <- svm(stars$class ~ stars_lda$x.LD1 + stars_lda$x.LD2, type = 'C', kernel = 'linear')
confusionMatrix(data = predict(svm_stars, as.data.frame(stars_lda$x.LD1, stars_lda$x.LD2), reference = stars$class))
lda_stars <- lda(class ~. , data = stars)
stars_lda <- as.data.frame(predict(lda_stars, stars))
svm_stars <- svm(stars$class ~ stars_lda$x.LD1 + stars_lda$x.LD2, type = 'C', kernel = 'linear')
confusionMatrix(data = predict(svm_stars, as.data.frame(stars_lda$x.LD1, stars_lda$x.LD2)), reference = stars$class)
lda_stars <- lda(class ~. , data = stars)
stars_lda <- as.data.frame(predict(lda_stars, stars))
svm_stars <- svm(stars$class ~., data = stars, type = 'C', kernel = 'linear')
confusionMatrix(data = predict(svm_stars, stars, reference = stars$class)
lda_stars <- lda(class ~. , data = stars)
stars_lda <- as.data.frame(predict(lda_stars, stars))
svm_stars <- svm(stars$class ~., data = stars, type = 'C', kernel = 'linear')
confusionMatrix(data = predict(svm_stars, stars), reference = stars$class)
lda_stars <- lda(class ~. , data = stars)
stars_lda <- as.data.frame(predict(lda_stars, stars))
ggplot(data = stars_lda, aes(x = x.LD1, y = x.LD2, color = stars$class)) + geom_point() + labs(x = 'First Linear Discriminant', y = 'Second Linear Discriminant', color = 'Object', title = 'Stars data in Linear Discriminant space')
index <- caret::createDataPartition(stars_class, p=0.75, list = FALSE)
index <- caret::createDataPartition(stars$class, p=0.75, list = FALSE)
stars_train <- stars[index,]
stars_test <- stars[-index,]
lda_stars <- lda(class ~. , data = stars_train)
stars_lda <- as.data.frame(predict(lda_stars, stars_test))
ggplot(data = stars_lda, aes(x = x.LD1, y = x.LD2, color = stars$class)) + geom_point() + labs(x = 'First Linear Discriminant', y = 'Second Linear Discriminant', color = 'Object', title = 'Stars data in Linear Discriminant space')
ggplot(data = stars_lda, aes(x = x.LD1, y = x.LD2, color = stars_test$class)) + geom_point() + labs(x = 'First Linear Discriminant', y = 'Second Linear Discriminant', color = 'Object', title = 'Stars data in Linear Discriminant space')
lda_1 <- MASS::lda(Customer_Segment ~. , data = wine_train)
wine_test_transform <- as.data.frame(predict(lda_1, wine_testn))
lda_1 <- MASS::lda(Customer_Segment ~. , data = wine_train)
wine_test_transform <- as.data.frame(predict(lda_1, wine_test))
head(wine_test_transform)
ggplot(data = wine_train_transform, aes(x = x.LD1, y = x.LD2, color = wine_train$Customer_Segment)) + geom_point() + labs(x = 'First Linear Discriminant', y = 'Second Linear Discriminant', color = 'Customer Segment', title = 'Wine training data in Linear Discriminant space')
ggplot(data = wine_train_transform, aes(x = x.LD1, y = x.LD2, color = wine_train$Customer_Segment)) + geom_point() + labs(x = 'First Linear Discriminant', y = 'Second Linear Discriminant', color = 'Customer Segment', title = 'Wine test data in Linear Discriminant space')
ggplot(data = wine_train_transform, aes(x = x.LD1, y = x.LD2, color = wine_test$Customer_Segment)) + geom_point() + labs(x = 'First Linear Discriminant', y = 'Second Linear Discriminant', color = 'Customer Segment', title = 'Wine test data in Linear Discriminant space')
ggplot(data = wine_test_transform, aes(x = x.LD1, y = x.LD2, color = wine_test$Customer_Segment)) + geom_point() + labs(x = 'First Linear Discriminant', y = 'Second Linear Discriminant', color = 'Customer Segment', title = 'Wine test data in Linear Discriminant space')
wine_train_transform <- as.data.frame(predict(lda_1, wine_train))
svm_lda <- e1071::svm(wine_train$Customer_Segment ~ wine_train_transform$x.LD1 + wine_train_transform$x.LD2, kernel = 'linear', type = 'C')
confusionMatrix(data = predict(svm_lda, wine_test_transform[,c(5,6)])[1:88], reference = wine_test$Customer_Segment)
index <- caret::createDataPartition(wine$Customer_Segment, list = FALSE)
wine_train <- wine[index,]
wine_test <- wine[-index,]
lda_1 <- MASS::lda(Customer_Segment ~. , data = wine_train)
wine_test_transform <- as.data.frame(predict(lda_1, wine_test))
head(wine_test_transform)
ggplot(data = wine_test_transform, aes(x = x.LD1, y = x.LD2, color = wine_test$Customer_Segment)) + geom_point() + labs(x = 'First Linear Discriminant', y = 'Second Linear Discriminant', color = 'Customer Segment', title = 'Wine test data in Linear Discriminant space')
wine_train_transform <- as.data.frame(predict(lda_1, wine_train))
svm_lda <- e1071::svm(wine_train$Customer_Segment ~ wine_train_transform$x.LD1 + wine_train_transform$x.LD2, kernel = 'linear', type = 'C')
confusionMatrix(data = predict(svm_lda, wine_test_transform[,c(5,6)])[1:88], reference = wine_test$Customer_Segment)
summary(lda_1)
lda_1$means
lda_1$svd
lda_1$terms
lda_1$scale
lda_1$lev
lda_1$scaling
apply(mean, wine_train[wine_train$Customer_Segment == 1,])
apply(fun = mean, wine_train[wine_train$Customer_Segment == 1,])
?apply
apply(wine_train[wine_train$Customer_Segment == 1,], mean)
tapply(wine_train[wine_train$Customer_Segment == 1,], mean)
rapply(wine_train[wine_train$Customer_Segment == 1,], mean)
rapply(wine_train[wine_train$Customer_Segment == 1,], mean)[-13]
rapply(wine_train[wine_train$Customer_Segment == 1,], mean)[-14]
means1 <- rapply(wine_train[wine_train$Customer_Segment == 1,], mean)[-14]
means2 <- rapply(wine_train[wine_train$Customer_Segment == 2,], mean)[-14]
means3 <- rapply(wine_train[wine_train$Customer_Segment == 3,], mean)[-14]
means1 <- rapply(wine_train[wine_train$Customer_Segment == 1,], mean)[-14]
means2 <- rapply(wine_train[wine_train$Customer_Segment == 2,], mean)[-14]
means3 <- rapply(wine_train[wine_train$Customer_Segment == 3,], mean)[-14]
meansMAT <- cbind(means1, means2, means3)
means1 <- rapply(wine_train[wine_train$Customer_Segment == 1,], mean)[-14]
means2 <- rapply(wine_train[wine_train$Customer_Segment == 2,], mean)[-14]
means3 <- rapply(wine_train[wine_train$Customer_Segment == 3,], mean)[-14]
meansMAT <- cbind(means1, means2, means3)
meansMAT
matrix(meansMAT)
dim(meansMAT)
matrix(meansMAT, (13,3))
matrix(meansMAT, shape =(13,3))
as.matrix()
as.matrix(meansMAT)
transpose
as.matrix(meansMAT)%*%transpose(as.matrix(meansMAT))
means1 <- rapply(wine_train[wine_train$Customer_Segment == 1,], mean)[-14]
means2 <- rapply(wine_train[wine_train$Customer_Segment == 2,], mean)[-14]
means3 <- rapply(wine_train[wine_train$Customer_Segment == 3,], mean)[-14]
meansMAT <- cbind(means1, means2, means3)
as.matrix(meansMAT)%*%transpose(as.matrix(meansMAT))
means1 <- rapply(wine_train[wine_train$Customer_Segment == 1,], mean)[-14]
means2 <- rapply(wine_train[wine_train$Customer_Segment == 2,], mean)[-14]
means3 <- rapply(wine_train[wine_train$Customer_Segment == 3,], mean)[-14]
meansMAT <- cbind(means1, means2, means3)
transpose(as.matrix(meansMAT))
?transpose
means1 <- rapply(wine_train[wine_train$Customer_Segment == 1,], mean)[-14]
means2 <- rapply(wine_train[wine_train$Customer_Segment == 2,], mean)[-14]
means3 <- rapply(wine_train[wine_train$Customer_Segment == 3,], mean)[-14]
meansMAT <- cbind(means1, means2, means3)
meansMAT%*%t(as.matrix(meansMAT))
eigne
eigen
means1 <- rapply(wine_train[wine_train$Customer_Segment == 1,], mean)[-14]
means2 <- rapply(wine_train[wine_train$Customer_Segment == 2,], mean)[-14]
means3 <- rapply(wine_train[wine_train$Customer_Segment == 3,], mean)[-14]
meansMAT <- cbind(means1, means2, means3)
eigen(meansMAT%*%t(as.matrix(meansMAT)))
whole_mean <- mean(wine_train)
whole_mean <- mean(wine_train)[-14]
whole_mean
whole_mean <- mean(wine_train[-14])
means1 <- rapply(wine_train[wine_train$Customer_Segment == 1,], mean)[-14]
means2 <- rapply(wine_train[wine_train$Customer_Segment == 2,], mean)[-14]
means3 <- rapply(wine_train[wine_train$Customer_Segment == 3,], mean)[-14]
whole_mean <- mean(wine_train[-14])
whole_mean
sd(wine_train[1])
sd(wine_train[1,])
sd(wine_train[,1])
sd(wine_train[,2])
sd(wine_train[1,2])
prcomp(wine_train, scale = TRUE, center = TRUE)
prcomp(wine_train[-14], scale = TRUE, center = TRUE)
PCA_wine
PCA_wine <- prcomp(wine_train[-14], scale = TRUE, center = TRUE)
PCA_wine
PCA_wine$scale
PCA_wine
PCA_wine <- prcomp(wine_train[-14], scale = TRUE, center = TRUE)
PCA_wine$sdev
PCA_wine <- prcomp(wine_train[-14], scale = TRUE, center = TRUE)
PCA_wine
predict(PCA_wine, wine_test)
predict(PCA_wine, wine_test)[,c(1,2)]
PCA_wine <- prcomp(wine_train[-14], scale = TRUE, center = TRUE)
PCA_wine
ggplot(PCA_wine_fits, aes(x = PC1, y = PC2, color = wine_test$Customer_Segment)) + geom_point()
PCA_wine_fits <- predict(PCA_wine, wine_test)
ggplot(PCA_wine_fits, aes(x = PC1, y = PC2, color = wine_test$Customer_Segment)) + geom_point()
ggplot(PCA_wine_fits, aes(x = PC1, y = PC2, color = wine_test$Customer_Segment)) + geom_point() + labs(title = 'Wine test data in Principal Component Space', x = 'Principal component 1', y = 'Principal Component 2', color = 'Customer Segment')
ggplot(screes, aes(x = screes)) + geom_bar()
variance_data <- sum(PCA_wine$sdev^2)
screes <- PCA_wine$sdev^2 / variance_data
ggplot(screes, aes(x = screes)) + geom_bar()
screes <- cbind(c(1:length(screes)),screes)
variance_data <- sum(PCA_wine$sdev^2)
screes <- PCA_wine$sdev^2 / variance_data
screes <- cbind(c(1:length(screes)),screes)
ggplot(screes, aes(x = screes)) + geom_bar()
variance_data <- sum(PCA_wine$sdev^2)
screes <- PCA_wine$sdev^2 / variance_data
screes <- cbind(c(1:length(screes)),screes)
#ggplot(screes, aes(x = y = screes)) + geom_bar()
screes
variance_data <- sum(PCA_wine$sdev^2)
screes <- PCA_wine$sdev^2 / variance_data
screes <- cbind(c(1:length(screes)),screes)
colnames(screes) <- c('component', 'scree')
ggplot(screes, aes(x = component, y = scree)) + geom_bar()
variance_data <- sum(PCA_wine$sdev^2)
screes <- PCA_wine$sdev^2 / variance_data
screes <- cbind(c(1:length(screes)),screes)
colnames(screes) <- c('component', 'scree')
ggplot(screes, aes(y = scree)) + geom_bar()
ggplot(screes, aes(x = component, y = scree)) + geom_point()
ggplot(screes, aes(x = component, y = scree)) + geom_point() + geom_line() + labs(title = 'Scree plot for wine PCA', x = 'Number of component', y = '% of variance explained')
ggplot(screes, aes(x = component, y = scree)) + geom_point() + geom_line() + labs(title = 'Scree plot for wine PCA', x = 'Number of component', y = '% of variance explained') + scale_x_discrete(breaks=component)
ggplot(screes, aes(x = component, y = scree)) + geom_point() + geom_line() + labs(title = 'Scree plot for wine PCA', x = 'Number of component', y = '% of variance explained') + scale_x_discrete(breaks=screes$component)
variance_data <- sum(PCA_wine$sdev^2)
screes <- PCA_wine$sdev^2 / variance_data
screes <- cbind(c(1:length(screes)),screes)
colnames(screes) <- c('component', 'scree')
ggplot(screes, aes(x = component, y = scree)) + geom_point() + geom_line() + labs(title = 'Scree plot for wine PCA', x = 'Number of component', y = '% of variance explained') + scale_x_discrete(breaks=screes$component)
ggplot(screes, aes(x = component, y = scree)) + geom_point() + geom_line() + labs(title = 'Scree plot for wine PCA', x = 'Number of component', y = '% of variance explained') + scale_x_discrete(breaks=(1:13))
ggplot(screes, aes(x = component, y = scree)) + geom_point() + geom_line() + labs(title = 'Scree plot for wine PCA', x = 'Number of component', y = '% of variance explained') + scale_x_discrete(breaks=(1,2,3,4))
ggplot(screes, aes(x = component, y = scree)) + geom_point() + geom_line() + labs(title = 'Scree plot for wine PCA', x = 'Number of component', y = '% of variance explained') + scale_x_discrete(breaks=c(1,2,3,4))
ggplot(screes, aes(x = component, y = scree)) + geom_point() + geom_line() + labs(title = 'Scree plot for wine PCA', x = 'Number of component', y = '% of variance explained')
ggplot(screes, aes(x = component, y = scree)) + geom_point() + geom_line() + labs(title = 'Scree plot for wine PCA', x = 'Number of component', y = '% of variance explained') + scale_y_discrete(breaks = c(0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9, 1))
ggplot(screes, aes(x = component, y = scree)) + geom_point() + geom_line() + labs(title = 'Scree plot for wine PCA', x = 'Number of component', y = '% of variance explained') + scale_y_discrete(breaks = c(0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9, 1), labels = c(0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9, 1))
ggplot(screes, aes(x = component, y = scree)) + geom_point() + geom_line() + labs(title = 'Scree plot for wine PCA', x = 'Number of component', y = '% of variance explained') + scale_y_discrete(breaks = seq(from = 0, to = 1, by = 0.1))
ggplot(screes, aes(x = component, y = scree)) + geom_point() + geom_line() + labs(title = 'Scree plot for wine PCA', x = 'Number of component', y = '% of variance explained') + scale_y_discrete(breaks = seq(from = 0, to = 1, by = 0.1), labels = seq(from = 0, to = 1, by = 0.1)
ggplot(screes, aes(x = component, y = scree)) + geom_point() + geom_line() + labs(title = 'Scree plot for wine PCA', x = 'Number of component', y = '% of variance explained') + scale_y_discrete(breaks = seq(from = 0, to = 1, by = 0.1), labels = seq(from = 0, to = 1, by = 0.1))
ggplot(screes, aes(x = component, y = scree)) + geom_point() + geom_line() + scale_y_discrete(breaks = seq(from = 0, to = 1, by = 0.1), labels = seq(from = 0, to = 1, by = 0.1))
ggplot(screes, aes(x = component, y = scree)) + geom_point() + geom_line() + scale_y_discrete(breaks = seq(from = 0, to = 1, by = 0.1), labels = seq(from = 0, to = 1, by = 0.1)) + labs(title = 'Scree plot for wine PCA', x = 'Number of component', y = '% of variance explained'
variance_data <- sum(PCA_wine$sdev^2)
ggplot(screes, aes(x = component, y = scree)) + geom_point() + geom_line() + scale_y_discrete(breaks = seq(from = 0, to = 1, by = 0.1), limits = c(0,1)) + labs(title = 'Scree plot for wine PCA', x = 'Number of component', y = '% of variance explained')
ggplot(screes, aes(x = component, y = scree)) + geom_point() + geom_line() + scale_y_discrete(breaks = seq(from = 0, to = 1, by = 0.1), limits = as.factor(c(0,1))) + labs(title = 'Scree plot for wine PCA', x = 'Number of component', y = '% of variance explained')
ggplot(screes, aes(x = component, y = scree)) + geom_point() + geom_line() + scale_y_discrete(breaks = seq(from = 0, to = 1, by = 0.1), limits = as.factor(c(0,1,2))) + labs(title = 'Scree plot for wine PCA', x = 'Number of component', y = '% of variance explained')
ggplot(screes, aes(x = component, y = scree)) + geom_point() + geom_line() + scale_y_discrete(breaks = seq(from = 0, to = 1, by = 0.1), limits = as.factor(c(0,0.1, 0.2))) + labs(title = 'Scree plot for wine PCA', x = 'Number of component', y = '% of variance explained')
ggplot(screes, aes(x = component, y = scree)) + geom_point() + geom_line() + scale_y_continuous(breaks = seq(from = 0, to = 1, by = 0.1), limits = as.factor(c(0,0.1, 0.2))) + labs(title = 'Scree plot for wine PCA', x = 'Number of component', y = '% of variance explained')
ggplot(screes, aes(x = component, y = scree)) + geom_point() + geom_line() + scale_y_continuous(breaks = seq(from = 0, to = 1, by = 0.1)) + labs(title = 'Scree plot for wine PCA', x = 'Number of component', y = '% of variance explained')
ggplot(screes, aes(x = component, y = scree)) + geom_point() + geom_line() + scale_y_continuous(breaks = seq(from = 0, to = 1, by = 0.1)) + scale_x_discreete(breaks = seq(from = 1, to = length(variance_data), by = 1)) + labs(title = 'Scree plot for wine PCA', x = 'Number of component', y = '% of variance explained')
ggplot(screes, aes(x = component, y = scree)) + geom_point() + geom_line() + scale_y_continuous(breaks = seq(from = 0, to = 1, by = 0.1)) + scale_x_discrete(breaks = seq(from = 1, to = length(variance_data), by = 1)) + labs(title = 'Scree plot for wine PCA', x = 'Number of component', y = '% of variance explained')
ggplot(screes, aes(x = component, y = scree)) + geom_point() + geom_line() + scale_y_continuous(breaks = seq(from = 0, to = 1, by = 0.1)) + scale_x_continuous(breaks = seq(from = 1, to = length(variance_data), by = 1)) + labs(title = 'Scree plot for wine PCA', x = 'Number of component', y = '% of variance explained')
ggplot(screes, aes(x = component, y = scree)) + geom_point() + geom_line() + scale_y_continuous(breaks = seq(from = 0, to = 1, by = 0.1)) + scale_x_continuous(breaks = seq(from = 1, to = length(variance_data), by = 1), labels = 1:14) + labs(title = 'Scree plot for wine PCA', x = 'Number of component', y = '% of variance explained')
ggplot(screes, aes(x = component, y = scree)) + geom_point() + geom_line() + scale_y_continuous(breaks = seq(from = 0, to = 1, by = 0.1)) + scale_x_continuous(breaks = seq(from = 1, to = length(variance_data), by = 1), labels = 1:13) + labs(title = 'Scree plot for wine PCA', x = 'Number of component', y = '% of variance explained')
ggplot(screes, aes(x = component, y = scree)) + geom_point() + geom_line() + scale_y_continuous(breaks = seq(from = 0, to = 1, by = 0.1)) + scale_x_continuous(breaks = 1:13, labels = 1:13) + labs(title = 'Scree plot for wine PCA', x = 'Number of component', y = '% of variance explained')
pct_screes <- cumsum(screes)
variance_data <- sum(PCA_wine$sdev^2)
screes <- PCA_wine$sdev^2 / variance_data
pct_screes <- cumsum(screes)
screes <- cbind(c(1:length(screes)),screes)
colnames(screes) <- c('component', 'scree')
ggplot(screes, aes(x = component, y = scree)) + geom_point() + geom_line() + scale_y_continuous(breaks = seq(from = 0, to = 1, by = 0.1)) + scale_x_continuous(breaks = 1:13, labels = 1:13) + labs(title = 'Scree plot for wine PCA', x = 'Number of component', y = '% of variance explained')
ggplot(screes, aes(x = component, y = scree, labels = pct_screes)) + geom_point() + geom_line() + scale_y_continuous(breaks = seq(from = 0, to = 1, by = 0.1)) + scale_x_continuous(breaks = 1:13, labels = 1:13) + labs(title = 'Scree plot for wine PCA', x = 'Number of component', y = '% of variance explained')
ggplot(screes, aes(x = component, y = scree, labels = pct_screes)) + geom_point() + geom_line() + geom_text() scale_y_continuous(breaks = seq(from = 0, to = 1, by = 0.1)) + scale_x_continuous(breaks = 1:13, labels = 1:13) + labs(title = 'Scree plot for wine PCA', x = 'Number of component', y = '% of variance explained')
ggplot(screes, aes(x = component, y = scree, labels = pct_screes)) + geom_point() + geom_line() + geom_text() + scale_y_continuous(breaks = seq(from = 0, to = 1, by = 0.1)) + scale_x_continuous(breaks = 1:13, labels = 1:13) + labs(title = 'Scree plot for wine PCA', x = 'Number of component', y = '% of variance explained')
ggplot(screes, aes(x = component, y = scree, label = pct_screes)) + geom_point() + geom_line() + geom_text() + scale_y_continuous(breaks = seq(from = 0, to = 1, by = 0.1)) + scale_x_continuous(breaks = 1:13, labels = 1:13) + labs(title = 'Scree plot for wine PCA', x = 'Number of component', y = '% of variance explained')
pct_screes <- round(cumsum(screes),2)
variance_data <- sum(PCA_wine$sdev^2)
screes <- PCA_wine$sdev^2 / variance_data
pct_screes <- round(cumsum(screes),2)
screes <- cbind(c(1:length(screes)),screes)
colnames(screes) <- c('component', 'scree')
ggplot(screes, aes(x = component, y = scree, label = pct_screes)) + geom_point() + geom_line() + geom_text() + scale_y_continuous(breaks = seq(from = 0, to = 1, by = 0.1)) + scale_x_continuous(breaks = 1:13, labels = 1:13) + labs(title = 'Scree plot for wine PCA', x = 'Number of component', y = '% of variance explained')
ggplot(screes, aes(x = component, y = scree, label = pct_screes)) + geom_point() + geom_line() + geom_text(hjust = 1) + scale_y_continuous(breaks = seq(from = 0, to = 1, by = 0.1)) + scale_x_continuous(breaks = 1:13, labels = 1:13) + labs(title = 'Scree plot for wine PCA', x = 'Number of component', y = '% of variance explained')
ggplot(screes, aes(x = component, y = scree, label = pct_screes)) + geom_point() + geom_line() + geom_text(vjust = 1) + scale_y_continuous(breaks = seq(from = 0, to = 1, by = 0.1)) + scale_x_continuous(breaks = 1:13, labels = 1:13) + labs(title = 'Scree plot for wine PCA', x = 'Number of component', y = '% of variance explained')
ggplot(screes, aes(x = component, y = scree, label = pct_screes)) + geom_point() + geom_line() + geom_text(vjust = 1, hjust = 3) + scale_y_continuous(breaks = seq(from = 0, to = 1, by = 0.1)) + scale_x_continuous(breaks = 1:13, labels = 1:13) + labs(title = 'Scree plot for wine PCA', x = 'Number of component', y = '% of variance explained')
ggplot(screes, aes(x = component, y = scree, label = pct_screes)) + geom_point() + geom_line() + geom_text(vjust = 1, hjust = 1) + scale_y_continuous(breaks = seq(from = 0, to = 1, by = 0.1)) + scale_x_continuous(breaks = 1:13, labels = 1:13) + labs(title = 'Scree plot for wine PCA', x = 'Number of component', y = '% of variance explained')
index <- caret::createDataPartition(wine$Customer_Segment, list = FALSE)
wine_train <- wine[index,]
wine_test <- wine[-index,]
lda_1 <- MASS::lda(Customer_Segment ~. , data = wine_train)
wine_test_transform <- as.data.frame(predict(lda_1, wine_test))
head(wine_test_transform)
lda_1 <- MASS::lda(Customer_Segment ~. , data = wine_train)
wine_test_transform <- as.data.frame(predict(lda_1, wine_test))
head(wine_test_transform)
lda_1$scaling
ggplot(data = wine_test_transform, aes(x = x.LD1, y = x.LD2, color = wine_test$Customer_Segment)) + geom_point() + labs(x = 'First Linear Discriminant', y = 'Second Linear Discriminant', color = 'Customer Segment', title = 'Wine test data in Linear Discriminant space')
PCA_wine <- prcomp(wine_train[-14], scale = TRUE, center = TRUE)
PCA_wine
PCA_wine_fits <- predict(PCA_wine, wine_test)
ggplot(PCA_wine_fits, aes(x = PC1, y = PC2, color = wine_test$Customer_Segment)) + geom_point() + labs(title = 'Wine test data in Principal Component Space', x = 'Principal component 1', y = 'Principal Component 2', color = 'Customer Segment')
variance_data <- sum(PCA_wine$sdev^2)
screes <- PCA_wine$sdev^2 / variance_data
pct_screes <- round(cumsum(screes),2)
screes <- cbind(c(1:length(screes)),screes)
colnames(screes) <- c('component', 'scree')
ggplot(screes, aes(x = component, y = scree, label = pct_screes)) + geom_point() + geom_line() + geom_text(vjust = 1, hjust = 1) + scale_y_continuous(breaks = seq(from = 0, to = 1, by = 0.1)) + scale_x_continuous(breaks = 1:13, labels = 1:13) + labs(title = 'Scree plot for wine PCA', x = 'Number of component', y = '% of variance explained')
summary(baseline)
confusionMatrix(data = predict(baseline, wine_test), reference = wine_test$Customer_Segment)
baseline <- e1017::svm(Customer_Segment ~. , data = wine_train, kernel = 'linear', type = 'C')
baseline <- e1071::svm(Customer_Segment ~. , data = wine_train, kernel = 'linear', type = 'C')
baseline <- e1071::svm(Customer_Segment ~. , data = wine_train, kernel = 'linear', type = 'C')
confusionMatrix(data = predict(baseline, wine_test), reference = wine_test$Customer_Segment)
baseline <- e1071::svm(Customer_Segment ~ Alcohol + Acidity , data = wine_train, kernel = 'linear', type = 'C')
baseline <- e1071::svm(Customer_Segment ~ Alcohol + Flavanoids , data = wine_train, kernel = 'linear', type = 'C')
baseline <- e1071::svm(Customer_Segment ~ Alcohol + Flavanoids , data = wine_train, kernel = 'linear', type = 'C')
confusionMatrix(data = predict(baseline, wine_test), reference = wine_test$Customer_Segment)
lda_1 <- MASS::lda(Customer_Segment ~. , data = wine_train)
wine_train_transform <- as.data.frame(predict(lda_1, wine_train))
wine_test_transform <- as.data.frame(predict(lda_1, wine_test))
head(wine_test_transform)
lda_svm <- e1071::svm(wine_train$Customer_Segment ~ wine_train_transform$x.LD1 + wine_train_transform$x.LD2, kernel = 'linear', type='C')
confusionMatrix(data = predict(baseline, wine_test_transform[,c(5,6)]), reference = wine_test$Customer_Segment)
confusionMatrix(data = predict(lda_svm, wine_test_transform[,c(5,6)]), reference = wine_test$Customer_Segment)
confusionMatrix(data = predict(lda_svm, wine_test_transform[,c(5,6)])[1:88,], reference = wine_test$Customer_Segment)
lda_svm <- e1071::svm(wine_train$Customer_Segment ~ wine_train_transform$x.LD1 + wine_train_transform$x.LD2, kernel = 'linear', type='C')
confusionMatrix(data = predict(lda_svm, wine_test_transform[,c(5,6)])[1:88,], reference = wine_test$Customer_Segment)
predict(lda_svm, wine_test_transform[,c(5,6)])
confusionMatrix(data = predict(lda_svm, wine_test_transform[,c(5,6)])[1:87,], reference = wine_test$Customer_Segment)
wine_test_transform[,c(5,6)]
confusionMatrix(data = predict(lda_svm, wine_test_transform[,c(5,6)])[1:88,], reference = wine_test$Customer_Segment)
confusionMatrix(data = predict(lda_svm, wine_test_transform[,c(5,6)]), reference = wine_test$Customer_Segment)
confusionMatrix(data = lda_svm_preds, reference = wine_test$Customer_Segment)
lda_svm <- e1071::svm(wine_train$Customer_Segment ~ wine_train_transform$x.LD1 + wine_train_transform$x.LD2, kernel = 'linear', type='C')
lda_svm_preds <- predict(lda_svm, wine_test_transform[,c(5,6)])
confusionMatrix(data = lda_svm_preds, reference = wine_test$Customer_Segment)
confusionMatrix(data = lda_svm_preds[1:88,], reference = wine_test$Customer_Segment)
confusionMatrix(data = lda_svm_preds[c(1:88),], reference = wine_test$Customer_Segment)
confusionMatrix(data = lda_svm_preds[88,], reference = wine_test$Customer_Segment)
lda_svm_preds[1:88,]
lda_svm_preds
lda_svm_preds[1:88]
confusionMatrix(data = lda_svm_preds[1:88], reference = wine_test$Customer_Segment)
PCA_wine_train_fits <- predict(PCA_wine, wine_train)
PCA_wine_fits <- predict(PCA_wine, wine_test)
ggplot(PCA_wine_fits, aes(x = PC1, y = PC2, color = wine_test$Customer_Segment)) + geom_point() + labs(title = 'Wine test data in Principal Component Space', x = 'Principal component 1', y = 'Principal Component 2', color = 'Customer Segment')
confusionMatrix(data = pca2_svm_preds, reference = wine_test$Customer_Segment)
pca2_svm <- e1017::svm(wine_train$Customer_Segment ~ PCA_wine_train_fits$PC1 + PCA_wine_train_fits$PC1, kernel = 'linear', type = 'C')
pca2_svm <- e1071::svm(wine_train$Customer_Segment ~ PCA_wine_train_fits$PC1 + PCA_wine_train_fits$PC1, kernel = 'linear', type = 'C')
predict(PCA_wine, wine_train)
predict(PCA_wine, wine_train)$PC1
predict(PCA_wine, wine_train)
predict(PCA_wine, wine_train)[,1]
pca2_svm <- e1071::svm(wine_train$Customer_Segment ~ PCA_wine_train_fits[,1] + PCA_wine_train_fits[,2], kernel = 'linear', type = 'C')
pca2_svm_preds <- predict(pca2_svm, PCA_wine_fits)
confusionMatrix(data = pca2_svm_preds, reference = wine_test$Customer_Segment)
confusionMatrix(data = pca2_svm_preds[1:88], reference = wine_test$Customer_Segment)
library(tidyverse)
library(MASS)
library(ggfortify)
library(VGAM)
library(caret)
library(e1071)
wine <- readr::read_csv('Wine.csv') %>% dplyr::mutate(Customer_Segment = as.factor(Customer_Segment))
head(wine)
index <- caret::createDataPartition(wine$Customer_Segment, list = FALSE)
wine_train <- wine[index,]
wine_test <- wine[-index,]
lda_1 <- MASS::lda(Customer_Segment ~. , data = wine_train)
wine_train_transform <- as.data.frame(predict(lda_1, wine_train))
wine_test_transform <- as.data.frame(predict(lda_1, wine_test))
head(wine_test_transform)
lda_1$scaling
ggplot(data = wine_test_transform, aes(x = x.LD1, y = x.LD2, color = wine_test$Customer_Segment)) + geom_point() + labs(x = 'First Linear Discriminant', y = 'Second Linear Discriminant', color = 'Customer Segment', title = 'Wine test data in Linear Discriminant space')
PCA_wine <- prcomp(wine_train[-14], scale = TRUE, center = TRUE)
PCA_wine
PCA_wine_train_fits <- predict(PCA_wine, wine_train)
PCA_wine_fits <- predict(PCA_wine, wine_test)
ggplot(PCA_wine_fits, aes(x = PC1, y = PC2, color = wine_test$Customer_Segment)) + geom_point() + labs(title = 'Wine test data in Principal Component Space', x = 'Principal component 1', y = 'Principal Component 2', color = 'Customer Segment')
variance_data <- sum(PCA_wine$sdev^2)
screes <- PCA_wine$sdev^2 / variance_data
pct_screes <- round(cumsum(screes),2)
screes <- cbind(c(1:length(screes)),screes)
colnames(screes) <- c('component', 'scree')
ggplot(screes, aes(x = component, y = scree, label = pct_screes)) + geom_point() + geom_line() + geom_text(vjust = 1, hjust = 1) + scale_y_continuous(breaks = seq(from = 0, to = 1, by = 0.1)) + scale_x_continuous(breaks = 1:13, labels = 1:13) + labs(title = 'Scree plot for wine PCA', x = 'Number of component', y = '% of variance explained')
baseline <- e1071::svm(Customer_Segment ~. , data = wine_train, kernel = 'linear', type = 'C')
confusionMatrix(data = predict(baseline, wine_test), reference = wine_test$Customer_Segment)
baseline <- e1071::svm(Customer_Segment ~ Alcohol + Flavanoids , data = wine_train, kernel = 'linear', type = 'C')
confusionMatrix(data = predict(baseline, wine_test), reference = wine_test$Customer_Segment)
lda_svm <- e1071::svm(wine_train$Customer_Segment ~ wine_train_transform$x.LD1 + wine_train_transform$x.LD2, kernel = 'linear', type='C')
lda_svm_preds <- predict(lda_svm, wine_test_transform[,c(5,6)])
confusionMatrix(data = lda_svm_preds[1:88], reference = wine_test$Customer_Segment)
pca2_svm <- e1071::svm(wine_train$Customer_Segment ~ PCA_wine_train_fits[,1] + PCA_wine_train_fits[,2], kernel = 'linear', type = 'C')
pca2_svm_preds <- predict(pca2_svm, PCA_wine_fits)
confusionMatrix(data = pca2_svm_preds[1:88], reference = wine_test$Customer_Segment)
stars <- readr::read_csv('stars.csv') %>% dplyr::mutate(class = as.factor(class))
stars <- stars[-c(1,9,10,12,13,17,18)]
head(stars)
index <- caret::createDataPartition(stars$class, p=0.75, list = FALSE)
stars_train <- stars[index,]
stars_test <- stars[-index,]
