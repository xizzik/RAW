library(mlbench)
breast <- as.tibble(mlbench::data(BreastCancer))
library(tidyverse)
library(mlbench)
breast <- as.tibble(mlbench::data(BreastCancer))
library(tidyverse)
library(mlbench)
breast <- as.tibble(data(BreastCancer))
head(breast)
library(tidyverse)
library(mlbench)
breast <- as.tibble(mlbench::BreastCancer)
library(tidyverse)
library(mlbench)
breast <- as.tibble(BreastCancer)
head(breast)
library(tidyverse)
library(mlbench)
breast <- as.tibble(BreastCancer)
unique(breast$Class)
library(tidyverse)
library(mlbench)
breast <- as.tibble(BreastCancer)
breast <- breast %>% dplyr::select(-c('Id'))
library(tidyverse)
library(mlbench)
breast <- as.tibble(BreastCancer)
breast <- breast %>% dplyr::select(-c('Id'))
unique(breast$Class)
library(caret)
train_test_split <- createDataPartition(breast$Class, p=0.75)
breast_train <- breast[train_test_split]
library(caret)
train_test_split <- createDataPartition(breast$Class, p=0.75)
breast_train <- breast[train_test_split,]
library(caret)
train_test_split <- createDataPartition(breast$Class, list = FALSE, p=0.75)
breast_train <- breast[train_test_split,]
breast_test <- breast[-train_test_split,]
library(caret)
train_test_split <- createDataPartition(breast$Class, list = FALSE, p=0.75)
breast_train <- breast[train_test_split,]
breast_test <- breast[-train_test_split,]
c(dim(breast_test),dim(breast_test))
library(caret)
train_test_split <- createDataPartition(breast$Class, list = FALSE, p=0.75)
breast_train <- breast[train_test_split,]
breast_test <- breast[-train_test_split,]
c(dim(breast_train),dim(breast_test))
library(caret)
train_test_split <- createDataPartition(breast$Class, list = FALSE, p=0.75)
breast_train <- breast[train_test_split,]
breast_test <- breast[-train_test_split,]
paste(dim(breast_train),dim(breast_test))
library(caret)
train_test_split <- createDataPartition(breast$Class, list = FALSE, p=0.75)
breast_train <- breast[train_test_split,]
breast_test <- breast[-train_test_split,]
cat(dim(breast_train),dim(breast_test))
library(caret)
train_test_split <- createDataPartition(breast$Class, list = FALSE, p=0.75)
breast_train <- breast[train_test_split,]
breast_test <- breast[-train_test_split,]
cat("" + dim(breast_train),dim(breast_test))
library(caret)
train_test_split <- createDataPartition(breast$Class, list = FALSE, p=0.75)
breast_train <- breast[train_test_split,]
breast_test <- breast[-train_test_split,]
cat(dim(breast_train),dim(breast_test))
table(breast$Class)
table(breast_train$Class)
table(breast_test$Class)
head(breast)
first_model <- glm(Class ~ Cell.size, data = breast_train)
summary(breast)
breast <- breast[-is.na(breast),]
library(caret)
train_test_split <- createDataPartition(breast$Class, list = FALSE, p=0.75)
breast_train <- breast[train_test_split,]
breast_test <- breast[-train_test_split,]
cat(dim(breast_train),dim(breast_test))
table(breast$Class)
table(breast_train$Class)
table(breast_test$Class)
first_model <- glm(Class ~ Cell.size, data = breast_train)
breast_train$Class
breast <- breast[-is.na(breast),] %>% dplyr::mutate(Class = ifelse(Class = 'benign', 0, 1))
library(tidyverse)
breast <- readr::read_csv('breast.csv')
breast <- breast %>% dplyr::select(-c('id'))
unique(breast$diagnosis)
summary(breast)
library(tidyverse)
breast <- readr::read_csv('breast.csv')
breast <- breast %>% dplyr::select(-c('id','...33'))
unique(breast$diagnosis)
summary(breast)
library(caret)
train_test_split <- createDataPartition(breast$Class, list = FALSE, p=0.75)
library(caret)
train_test_split <- createDataPartition(breast$diagnosis, list = FALSE, p=0.75)
breast_train <- breast[train_test_split,]
breast_test <- breast[-train_test_split,]
cat(dim(breast_train),dim(breast_test))
table(breast$Class)
table(breast$diagnosis)
table(breast_train$diagnosis)
table(breast_test$diagnosis)
first_model <- glm(diagnosis ~ area, data = breast_train)
first_model <- glm(diagnosis ~ area_mean, data = breast_train)
library(tidyverse)
breast <- readr::read_csv('breast.csv')
breast <- breast %>% dplyr::select(-c('id','...33')) %>%
dplyr::mutate(diagnosis = ifelse(diagnosis = 'M', 1, 0))
summary(breast)
library(tidyverse)
breast <- readr::read_csv('breast.csv')
breast <- breast %>% dplyr::select(-c('id','...33')) %>%
dplyr::mutate(diagnosis = ifelse(diagnosis == 'M', 1, 0))
unique(breast$diagnosis)
summary(breast)
library(caret)
train_test_split <- createDataPartition(breast$diagnosis, list = FALSE, p=0.75)
breast_train <- breast[train_test_split,]
breast_test <- breast[-train_test_split,]
cat(dim(breast_train),dim(breast_test))
table(breast$diagnosis)
table(breast_train$diagnosis)
library(tidyverse)
breast <- readr::read_csv('breast.csv')
breast <- breast %>% dplyr::select(-c('id','...33')) %>%
dplyr::mutate(diagnosis = ifelse(diagnosis == 'M', 1, 0)) %>%
dplyr::mutate(diagnosis = as.factor(diagnosis))
unique(breast$diagnosis)
summary(breast)
library(caret)
train_test_split <- createDataPartition(breast$diagnosis, list = FALSE, p=0.75)
breast_train <- breast[train_test_split,]
breast_test <- breast[-train_test_split,]
cat(dim(breast_train),dim(breast_test))
table(breast$diagnosis)
table(breast_train$diagnosis)
table(breast_test$diagnosis)
first_model <- glm(diagnosis ~ area_mean, data = breast_train)
summary(breast_train)
first_model <- glm(diagnosis ~ area_mean, data = breast_train)
first_model <- glm(diagnosis ~ area_mean, data = breast_train, family='binomial')
summary(first_model)
table(first_model)
table(predict(first_model, breast_test, type = 'response'))
table(predict(first_model, breast_test, type = 'response'), breast_test$diagnosis)
fmpreds <- predict(first_model, breast_test, type = 'response')
fmpreds_classes <- ifelse(fmpreds > 0.5, 1, 0)
table(breast_test$diagnosis, fmpreds_classes)
fmpreds <- predict(first_model, breast_test, type = 'response')
fmpreds_classes <- ifelse(fmpreds > 0.5, 1, 0)
table(breast_test$diagnosis, fmpreds_classes)
fm_confusion_matrix <- caret::confusionMatrix(factor(fmpreds_classes), factor(breast_test$diagnosis))$table
fm_confusion_matrix
fmpreds <- predict(first_model, breast_test, type = 'response')
fmpreds_classes <- ifelse(fmpreds > 0.5, 1, 0)
table(fmpreds_classes,breast_test$diagnosis )
fm_confusion_matrix <- caret::confusionMatrix(factor(fmpreds_classes), factor(breast_test$diagnosis))$table
fm_confusion_matrix
sum(fm_confusion_matrix)
tr(fm_confusion_matrix)/(fm_confusion_matrix)
sum(diag(fm_confusion_matrix))/(fm_confusion_matrix)
sum(diag(fm_confusion_matrix))/sum(fm_confusion_matrix)
confusionMatrix(factor(fmpreds_classes), factor(breast_test$diagnosis))
sum(diag(fm_confusion_matrix))/sum(fm_confusion_matrix)
table(breast_test)
table(breast_test$diagnosis)
clbalance <- table(breast_test$diagnosis)
clbalance
clbalance[0]/sum(clbalance)
clbalance[0]
clbalance[1]/sum(clbalance)
round(clbalance[1]/sum(clbalance),2)
round(sum(diag(fm_confusion_matrix))/sum(fm_confusion_matrix), 2)
group_by(fm_confusion_matrix, Reference)
group_by(as.tibble(fm_confusion_matrix), Reference)
ggplot(fm_confusion_matrix, aes(x = Reference, y = Prediction)) + geom_tile()
ggplot(as.tibble(fm_confusion_matrix), aes(x = Reference, y = Prediction)) + geom_tile()
ggplot(data.frame(fm_confusion_matrix), aes(x = Reference, y = Prediction)) + geom_tile()
ggplot(as.tibble(fm_confusion_matrix), aes(x = Reference, y = Prediction)) + geom_tile(aes(fill = Freq))
ggplot(as.tibble(fm_confusion_matrix), aes(x = Reference, y = Prediction)) + geom_tile() + geom_text(aes(label = sprintf("%1.0f", y)), vjust = 1)
ggplot(as.tibble(fm_confusion_matrix), aes(x = Reference, y = Prediction, fill = Freq))
fm_confusion_matrix <- as.tibble(fm_confusion_matrix)
fm_confusion_matrix$Prediction <- factor(fm_confusion_matrix$Prediction, levels = rev(levels(fm_confusion_matrix$Prediciton)))
ggplot(as.tibble(fm_confusion_matrix), aes(x = Reference, y = Prediction, fill = Freq))
ggplot::autoplot(fm_confusion_matrix, type = 'heatmap')
ggplot2::autoplot(fm_confusion_matrix, type = 'heatmap')
fm_cm <- caret::confusionMatrix(factor(fmpreds_classes), factor(breast_test$diagnosis))
fm_confusion_matrix <- fm_cm$table
fm_confusion_matrix
ggplot2::autoplot(fm_cm, type = 'heatmap')
library(yardstick)
install.packages('yardstick')
library(yardstick)
ggplot2::autoplot(fm_cm, type = 'heatmap')
library(yardstick)
yardstick::autoplot(fm_cm, type = 'heatmap')
library(yardstick)
autoplot(fm_cm, type = 'heatmap')
ggplot(as.data.frame(fm_confusion_matrix), aes(x = Reference, y = Prediction)) + geom_tile(aes(fill = Freq))
ggplot(as.tibble(fm_confusion_matrix), aes(x = Reference, y = Prediction)) + geom_tile(aes(fill = Freq))
ggplot(as.data.frame(fm_confusion_matrix), aes(x = Reference, y = Prediction)) + geom_tile(aes(fill = Freq))
ggplot(as.data.frame(fm_confusion_matrix), aes(x = Reference, y = Prediction)) +
geom_tile(aes(fill = Freq))
ggplot(as.data.frame(fm_confusion_matrix), aes(x = Reference, y = Prediction)) +
geom_tile(aes(fill = log(Freq)))
ggplot(as.data.frame(fm_confusion_matrix), aes(x = Reference, y = Prediction)) +
geom_tile(aes(fill = Freq), colour = 'pink')
ggplot(as.data.frame(fm_confusion_matrix), aes(x = Reference, y = Prediction)) +
geom_tile(aes(fill = Freq), colour = 'white')
ggplot(as.data.frame(fm_confusion_matrix), aes(x = Reference, y = Prediction)) +
geom_tile(aes(fill = Freq), colour = 'white') + scale_fill_gradient(low = 'red', high = 'green')
ggplot(as.data.frame(fm_confusion_matrix), aes(x = Reference, y = Prediction)) +
geom_tile(aes(fill = log(Freq)), colour = 'white') + scale_fill_gradient(low = 'red', high = 'green')
ggplot(as.data.frame(fm_confusion_matrix), aes(x = Reference, y = Prediction)) +
geom_tile(aes(fill = log(Freq)), colour = 'white') + scale_fill_gradient(low = 'pink', high = 'green')
ggplot(as.data.frame(fm_confusion_matrix), aes(x = Reference, y = Prediction)) +
geom_tile(aes(fill = log(Freq)), colour = 'white') + scale_fill_gradient(low = 'white', high = 'green')
ggplot(as.data.frame(fm_confusion_matrix), aes(x = Reference, y = Prediction)) +
geom_tile(aes(fill = Freq), colour = 'white') + scale_fill_gradient(low = 'white', high = 'green')
ggplot(as.data.frame(fm_confusion_matrix), aes(x = Reference, y = Prediction)) +
geom_tile(aes(fill = Freq), colour = 'white') + scale_fill_gradient(low = 'white', high = 'green') +
geom_text(aes(x = Reference, y = Prediction, label = Freq))
ggplot(as.data.frame(fm_confusion_matrix), aes(x = Reference, y = Prediction)) +
geom_tile(aes(fill = Freq), colour = 'white') + scale_fill_gradient(low = 'white', high = 'green') +
geom_text(aes(x = Reference, y = Prediction, label = Freq)) + labs(Freq = 'a')
ggplot(as.data.frame(fm_confusion_matrix), aes(x = Reference, y = Prediction)) +
geom_tile(aes(fill = Freq), colour = 'white') + scale_fill_gradient(low = 'white', high = 'green') +
geom_text(aes(x = Reference, y = Prediction, label = Freq)) + labs(legend = 'a')
ggplot(as.data.frame(fm_confusion_matrix), aes(x = Reference, y = Prediction)) +
geom_tile(aes(fill = Freq), colour = 'white') + scale_fill_gradient(low = 'white', high = 'green') +
geom_text(aes(x = Reference, y = Prediction, label = Freq)) + labs(Freq = 'a')
ggplot(as.data.frame(fm_confusion_matrix), aes(x = Reference, y = Prediction)) +
geom_tile(aes(fill = Freq), colour = 'white') + scale_fill_gradient(low = 'white', high = 'green') +
geom_text(aes(x = Reference, y = Prediction, label = Freq))
Uwaga: W poniższej implementacji wykresu używamy naszej macierzy pomyłek jako obiektu *data frame*, aby móc użyć funkcjonalności *ggplot*, która zlicza nam wystąpienia, czyli *Freq*.
first_model <- glm(diagnosis ~ area_mean + radius_mean, data = breast_train, family='binomial')
first_model <- glm(diagnosis ~ area_mean + perimeter_mean, data = breast_train, family='binomial')
first_model <- glm(diagnosis ~ area_mean + perimeter_mean, data = breast_train, family='binomial')
summary(first_model)
first_model <- glm(diagnosis ~ area_mean , data = breast_train, family='binomial')
first_model <- glm(diagnosis ~ area_mean , data = breast_train, family='binomial')
summary(first_model)
ggplot(as.data.frame(fm_confusion_matrix), aes(x = Reference, y = Prediction)) +
geom_tile(aes(fill = Freq), colour = 'white') + scale_fill_gradient(low = 'white', high = 'green') +
geom_text(aes(x = Reference, y = Prediction, label = Freq))
summary(first_model)
summary(glm(diagnosis ~ as.factor(1:length(diagnosis)), data = breast_train, family = 'binomial')))
summary(glm(diagnosis ~ as.factor(1:length(diagnosis)), data = breast_train, family = 'binomial'))
anova(saturated)
saturated <- glm(diagnosis ~ as.factor(1:length(diagnosis)), data = breast_train, family = 'binomial')
anova(saturated)
saturated <- glm(diagnosis ~ as.factor(1:length(diagnosis)), data = breast_train, family = 'binomial', maxit=100)
saturated <- glm(diagnosis ~ as.factor(1:length(diagnosis)), data = breast_train, family = 'binomial', maxit=100)
anova(saturated)
summary(saturated)
logLik(saturated)
2*(logLik(saturated) - logLik(first_model))
summary(first_model)
summary(null)
summary(nullm)
nullm <- glm(diagnosis ~ 1, data = breast_train, family = 'binomial')
summary(nullm)
2*(logLik(saturated) - logLik(nullm))
saturated <- glm(diagnosis ~ as.factor(1:length(diagnosis)), data = breast_train, family = 'binomial', maxit=100)
2*(logLik(saturated) - logLik(first_model))
2*(logLik(saturated))
2*(logLik(saturated) - logLik(nullm))
exp(logLik(saturate))
exp(logLik(saturated))
1 - (2*(logLik(saturated) - logLik(first_model))/(2*(logLik(saturated) - logLik(nullm)))
```{r}
1 - (2*(logLik(saturated) - logLik(first_model))/(2*(logLik(saturated) - logLik(nullm)))
1 - (2*(logLik(saturated) - logLik(first_model)))/(2*(logLik(saturated) - logLik(nullm)))
fm_cm
heart <- readr::read_csv('heart.csv')
